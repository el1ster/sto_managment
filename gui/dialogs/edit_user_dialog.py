from PyQt6.QtWidgets import (
    QDialog, QVBoxLayout, QLabel, QLineEdit, QComboBox, QPushButton,
    QMessageBox, QCheckBox, QHBoxLayout
)
from models.user import User
from models.role import UserRole
from logic.password_service import hash_password
from logic.validators import validate_username, validate_password
from gui.dialogs.password_generator_dialog import PasswordGeneratorDialog


class EditUserDialog(QDialog):
    """
    –î—ñ–∞–ª–æ–≥ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    @staticmethod
    def allowed_to_edit(user, current_user):
        """
        –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
        """
        if user.role.role_name == "superadmin" and user.id != current_user.id:
            return False, "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —á—É–∂–æ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º—ñ–Ω—É –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ!"
        if user.role.role_name == "admin" and current_user.role.role_name != "superadmin":
            return False, "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ —Å—É–ø–µ—Ä-–∞–¥–º—ñ–Ω—É!"
        return True, ""

    def __init__(self, user: User, current_user, parent=None):
        try:
            super().__init__(parent)
            self.setWindowTitle(f"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user.username}")
            self.setFixedSize(360, 360)
            self.user = user
            self.current_user = current_user

            layout = QVBoxLayout()

            self.username_edit = QLineEdit(user.username)

            password_layout = QHBoxLayout()
            self.password_edit = QLineEdit()
            self.password_edit.setEchoMode(QLineEdit.EchoMode.Password)
            self.password_edit.setPlaceholderText("–ó–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —â–æ–± –Ω–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏")

            self.show_pass_btn = QPushButton("üëÅ")
            self.show_pass_btn.setCheckable(True)
            self.show_pass_btn.setFixedWidth(32)
            self.show_pass_btn.clicked.connect(self.toggle_password_visibility)

            self.gen_pass_btn = QPushButton("üîß")
            self.gen_pass_btn.setToolTip("–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å")
            self.gen_pass_btn.setFixedWidth(32)
            self.gen_pass_btn.clicked.connect(self.open_password_generator)

            password_layout.addWidget(self.password_edit)
            password_layout.addWidget(self.show_pass_btn)
            password_layout.addWidget(self.gen_pass_btn)

            self.role_combo = QComboBox()
            try:
                self.roles = [
                    role for role in UserRole.select()
                    if role.role_name != "superadmin" or user.role.role_name == "superadmin"
                ]
                self.role_combo.addItems([r.role_name for r in self.roles])
                current_index = next((i for i, r in enumerate(self.roles) if r.id == user.role.id), 0)
                self.role_combo.setCurrentIndex(current_index)
            except Exception:
                self.roles = []
                QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")

            self.active_checkbox = QCheckBox("–ê–∫—Ç–∏–≤–Ω–∏–π")
            self.active_checkbox.setChecked(user.is_active)

            layout.addWidget(QLabel("–õ–æ–≥—ñ–Ω:"))
            layout.addWidget(self.username_edit)

            layout.addWidget(QLabel("–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å (–æ–ø—Ü—ñ–π–Ω–æ):"))
            layout.addLayout(password_layout)

            layout.addWidget(QLabel("–†–æ–ª—å:"))
            layout.addWidget(self.role_combo)

            layout.addWidget(self.active_checkbox)

            self.save_btn = QPushButton("–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏")
            self.save_btn.clicked.connect(self.save_user)
            layout.addWidget(self.save_btn)

            self.setLayout(layout)

        except Exception as e:
            QMessageBox.critical(None, "–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤—ñ–∫–Ω–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: {e}")

    def toggle_password_visibility(self):
        """
        –ü–µ—Ä–µ–º–∏–∫–∞—î –≤–∏–¥–∏–º—ñ—Å—Ç—å –ø–æ–ª—è –ø–∞—Ä–æ–ª—è.
        """
        try:
            if self.show_pass_btn.isChecked():
                self.password_edit.setEchoMode(QLineEdit.EchoMode.Normal)
                self.show_pass_btn.setText("‚ùå")
            else:
                self.password_edit.setEchoMode(QLineEdit.EchoMode.Password)
                self.show_pass_btn.setText("üëÅ")
        except Exception:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–º–∫–Ω—É—Ç–∏ –≤–∏–¥–∏–º—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—è.")

    def open_password_generator(self):
        """
        –í—ñ–¥–∫—Ä–∏–≤–∞—î –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª—ñ–≤.
        """
        try:
            dlg = PasswordGeneratorDialog(min_length=8, parent=self)
            dlg.password_generated.connect(self.password_edit.setText)
            dlg.exec()
        except Exception:
            QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª—ñ–≤.")

    def save_user(self):
        """
        –ó–±–µ—Ä—ñ–≥–∞—î –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
        """
        try:
            if not self.roles:
                QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–ª–µ–π –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.")
                return

            role = self.roles[self.role_combo.currentIndex()]
            is_active = self.active_checkbox.isChecked()
            new_username = self.username_edit.text().strip()
            new_password = self.password_edit.text().strip()

            if not validate_username(new_username, parent=self):
                return

            if User.select().where((User.username == new_username) & (User.id != self.user.id)).exists():
                QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ–∑ —Ç–∞–∫–∏–º –ª–æ–≥—ñ–Ω–æ–º –≤–∂–µ —ñ—Å–Ω—É—î.")
                return

            self.user.username = new_username
            self.user.role = role
            self.user.is_active = is_active

            if new_password:
                if not validate_password(new_password, parent=self):
                    return
                self.user.password_hash = hash_password(new_password)

            self.user.save()
            QMessageBox.information(self, "–£—Å–ø—ñ—Ö", "–î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ.")
            self.accept()
        except Exception as ex:
            QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {ex}")
