from PyQt6.QtWidgets import (
    QDialog, QVBoxLayout, QLabel, QLineEdit, QPushButton, QMessageBox, QHBoxLayout
)
from logic.auth_service import reset_user_password, authenticate_user
from models.user import User
from logic.validators import validate_password
from gui.dialogs.password_generator_dialog import PasswordGeneratorDialog


class ResetPasswordDialog(QDialog):
    """
    –î—ñ–∞–ª–æ–≥–æ–≤–µ –≤—ñ–∫–Ω–æ –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    def __init__(self, username, current_user, parent=None):
        try:
            super().__init__(parent)
            self.setWindowTitle("–°–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è")
            self.setFixedSize(380, 250)

            self.username = username
            self.current_user = current_user

            layout = QVBoxLayout()
            self.info_label = QLabel(f"–°–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {username}")
            self.new_password_label = QLabel("–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å:")

            password_layout = QHBoxLayout()
            self.new_password_edit = QLineEdit()
            self.new_password_edit.setEchoMode(QLineEdit.EchoMode.Password)

            self.gen_password_btn = QPushButton("üîß")
            self.gen_password_btn.setToolTip("–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–∞—Ä–æ–ª—å")
            self.gen_password_btn.setFixedWidth(32)
            self.gen_password_btn.clicked.connect(self.open_password_generator)

            self.show_pass_btn = QPushButton("üëÅ")
            self.show_pass_btn.setToolTip("–ü–æ–∫–∞–∑–∞—Ç–∏/—Å—Ö–æ–≤–∞—Ç–∏ –ø–∞—Ä–æ–ª—å")
            self.show_pass_btn.setCheckable(True)
            self.show_pass_btn.setFixedWidth(32)
            self.show_pass_btn.clicked.connect(self.toggle_password_visibility)

            password_layout.addWidget(self.new_password_edit)
            password_layout.addWidget(self.gen_password_btn)
            password_layout.addWidget(self.show_pass_btn)

            self.superadmin_pass_label = QLabel("–ü–∞—Ä–æ–ª—å SuperAdmin:")
            self.superadmin_pass_edit = QLineEdit()
            self.superadmin_pass_edit.setEchoMode(QLineEdit.EchoMode.Password)
            self.superadmin_pass_label.hide()
            self.superadmin_pass_edit.hide()

            self.reset_btn = QPushButton("–°–∫–∏–Ω—É—Ç–∏")
            self.reset_btn.clicked.connect(self.reset_password)

            layout.addWidget(self.info_label)
            layout.addWidget(self.new_password_label)
            layout.addLayout(password_layout)
            layout.addWidget(self.superadmin_pass_label)
            layout.addWidget(self.superadmin_pass_edit)
            layout.addWidget(self.reset_btn)
            self.setLayout(layout)

            try:
                user_to_reset = User.get_or_none(User.username == username)
                if user_to_reset and user_to_reset.role_id == 1:
                    self.superadmin_pass_label.show()
                    self.superadmin_pass_edit.show()
            except Exception as e:
                QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {e}")
        except Exception as e:
            QMessageBox.critical(None, "–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥: {e}")

    def open_password_generator(self):
        try:
            dlg = PasswordGeneratorDialog(min_length=8, parent=self)
            dlg.password_generated.connect(self.new_password_edit.setText)
            dlg.exec()
        except Exception as e:
            QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª—ñ–≤: {e}")

    def toggle_password_visibility(self):
        try:
            if self.show_pass_btn.isChecked():
                self.new_password_edit.setEchoMode(QLineEdit.EchoMode.Normal)
                self.show_pass_btn.setText("‚ùå")
            else:
                self.new_password_edit.setEchoMode(QLineEdit.EchoMode.Password)
                self.show_pass_btn.setText("üëÅ")
        except Exception:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–º—ñ–Ω–∏—Ç–∏ –≤–∏–¥–∏–º—ñ—Å—Ç—å –ø–∞—Ä–æ–ª—è.")

    def reset_password(self):
        try:
            new_password = self.new_password_edit.text().strip()
            user = User.get_or_none(User.username == self.username)
            if not user:
                QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
                return

            if user.role_id == 1:
                superadmin_pass = self.superadmin_pass_edit.text().strip()
                if self.current_user is not None and self.current_user.role_id != 1:
                    QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–õ–∏—à–µ SuperAdmin –º–æ–∂–µ —Å–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å SuperAdmin.")
                    return
                if not authenticate_user("superadmin", superadmin_pass):
                    QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å SuperAdmin!")
                    return

            if user.role_id == 2 and (self.current_user is None or self.current_user.role_id != 1):
                QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–¢—ñ–ª—å–∫–∏ SuperAdmin –º–æ–∂–µ —Å–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
                return

            if not validate_password(new_password, parent=self):
                return

            if reset_user_password(user.id, new_password):
                QMessageBox.information(self, "–£—Å–ø—ñ—Ö", "–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ —Å–∫–∏–Ω—É—Ç–æ.")
                self.accept()
            else:
                QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å.")
        except Exception as e:
            QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∫–∏–¥–∞–Ω–Ω—ñ –ø–∞—Ä–æ–ª—è: {e}")
